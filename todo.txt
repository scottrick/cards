APP-WORK
======================================
make sure CURRENT POSITION in search results is always accurate.

-> shared app transitions.

-> Need to only use placeholders and reset image resource to 0 for imageViews that aren't doing the transition
-> figure out dontTransform usage -> do we need to?  Maybe only use for imageViews whne transitioning, as above

-> Figure out how to handle the location images during hte transition.  Just always show them vertically and dont rotate?

-> Update the included json for swccg and star trek.

-> Change fragment navigation transitions to fade super quick, instead of just instantly changing?

-> improve destiny handling once destiny json changes are merged.




GENERAL:
-> Once PADD 1.0 & 2.0 is finished, create a new repo with the sets.jsons I created.

-> encountered strange issue where Wolf-Steed was showing up in the wrong set...
    -> I wonder if there is some sort of race condition or
    other issue causing the data to get messed up in rare occasions?
    haven't seen this again, not sure what happened yet...
    -> Haven't seen this, possibly was some strange problem with theemulator.
    -> If i still haven't seen this in June, remove this as it will have been a year at that point.




LATER
======================================
-> Enable fastscroll on the SearchResultsFragment once the bug in RecyclerView has been fixed.
-> https://issuetracker.google.com/issues/64729576

-> Add checklist feature.  Allow users to somehow specify what cards they own (and how many?).

-> Populate auto-suggestions for custom filters similar to how scomp link works.

-> Implement improved HTTP caching?  https://github.com/bumptech/glide/issues/463
    -> Might not be worth it, rare use case that will make the experience worse 99.9% of the time.  Recommend just clearing the app cache in these situations.
    -> Add force download button, to clear image cache for a particular image?

-> Add a gear icon, on the top right opposite "Search Text" which will open settings.  Inside the settings, allow the user to download the cards and store them locally.  Should be able to download by sets?  or all at once?  Not sure.  Maybe, to keep it simple, just walk through all cards in the json and download them locally, along with the "timestamp".  So then in the future you can try to re-download everything and it will check all the images, and update the locally saved image if the remote was updated?




JSON-REPO WORK
======================================




RELEASING
======================================
--> build and publish all card app artifacts to the beta track
./gradlew publishBundle

--> promote all beta artifacts to the production track
./gradlew promoteArtifact

--> updates all publishing images/text
./gradlew publishListing

--> sync all publishing data with the current values
./gradlew bootstrap